/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
       ListNode* curr=head;
       if (k==0) return head;
       if (head==NULL) return NULL;
       int count=0;
       while (curr)
       {
           count++;
           curr=curr->next;
       }
       if (count==1) return head;
       k=k%count;
       int temp=count-k;
       if (temp==0 || temp==count) return head;
       curr=head;
       while (--temp)
       {
           curr=curr->next;
       }
       ListNode* nxt=curr->next;
       curr->next=NULL;
       ListNode* newhead=nxt;
       while (nxt->next)
       nxt=nxt->next;
       nxt->next=head;
       return newhead;

        
    }
};