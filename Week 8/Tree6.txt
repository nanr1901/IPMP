class Solution {
public:
vector<int> inorder;
    vector<int> inorderTraversal(TreeNode* root) {
        if (root==NULL) return inorder;
        inorderTraversal(root->left);
        inorder.push_back(root->val);
        inorderTraversal(root->right);
         return inorder;
    }
   
};




class Solution {
public:
vector<int>pre;
    vector<int> preorderTraversal(TreeNode* root) {
        if (root==NULL) return {};
        pre.push_back(root->val);
        preorderTraversal(root->left);
        preorderTraversal(root->right);
        return pre;

        
    }
};



class Solution {
public:
vector<int>post;
    vector<int> postorderTraversal(TreeNode* root) {
        if (root==NULL) return {};
        postorderTraversal(root->left);
        postorderTraversal(root->right);
        post.push_back(root->val);
        return post;
        
    }
};