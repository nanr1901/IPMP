//{ Driver Code Starts
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <bits/stdc++.h>
using namespace std;

struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};


// } Driver Code Ends
/* Structure of the linked list node is as
struct Node 
{
    int data;
    struct Node* next;
    Node(int x) { data = x;  next = NULL; }
};
*/


class Solution{
  public:
    Node* findmid(struct Node* head)
    {
        Node* slow=head,*fast=head->next;
        while (fast && fast->next)
        slow=slow->next,fast=fast->next->next;
        return slow;
    }
    Node *merge(Node* a,Node* b)
    {
        Node* c=new Node(-1);
        Node *chead=c;
        while (a && b)
        {
            if (a->data<b->data)
            {
                c->next=new Node(a->data);
                c=c->next;
                a=a->next;
            }
            else
            {
                c->next=new Node(b->data);
                c=c->next;
                b=b->next;
            }
            
        }
        while (a)
    {
         c->next=new Node(a->data);
                c=c->next;
                a=a->next;
        
    }
    while (b)
    {
        c->next=new Node(b->data);
                c=c->next;
                b=b->next;
        
    }
    
    return chead->next;
    }
    
    Node* mergeSort(Node* head) {
        if (head->next==NULL) return head;
        Node *mid=findmid(head);
        Node *right=mid->next;
        mid->next=NULL;
        Node *left=mergeSort(head);
        Node* rightl=mergeSort(right);
        Node *sort=merge(left,rightl);
        return sort;
    }
};


//{ Driver Code Starts.

void printList(Node* node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

void push(struct Node** head_ref, int new_data) {
    Node* new_node = new Node(new_data);

    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

int main() {
    long test;
    cin >> test;
    while (test--) {
        struct Node* a = NULL;
        long n, tmp;
        cin >> n;
        for (int i = 0; i < n; i++) {
            cin >> tmp;
            push(&a, tmp);
        }
        Solution obj;
        a = obj.mergeSort(a);
        printList(a);
    }
    return 0;
}
// } Driver Code Ends